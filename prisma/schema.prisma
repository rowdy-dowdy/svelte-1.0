// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  // sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// model Product {
//   id            String    @id @default(cuid())
// }

model Quizzes {
  id String @id @default(cuid())
  title String
  work_time DateTime

  passages Passages[]
}

model Passages {
  id String @id @default(cuid())
  title String

  quiz_id String
  quiz Quizzes @relation(fields: [quiz_id], references: [id])

  group_questions GroupQuestions[]
}

model GroupQuestions {
  id String @id @default(cuid())
  title String
  image String?
  type String?

  passage_id String
  passage Passages @relation(fields: [passage_id], references: [id])

  questions Questions[]
}

model Questions {
  id String @id @default(cuid())

  group_question_id String
  group_quesstion GroupQuestions @relation(fields: [group_question_id], references: [id])
}

model Answers {
  id String @id @default(cuid())
}

model QuestionOptions{
  id String @id @default(cuid())
}

// https://tuhocielts.dolenglish.vn/luyen-thi-ielts/ielts-online-test-luyen-tap-cambridge-ielts-16-test-4-reading